{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaabi\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Juntaaibank\\\\src\\\\contexts\\\\GroupContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupContext = /*#__PURE__*/createContext();\nexport function GroupProvider({\n  children\n}) {\n  _s();\n  const [grupos, setGrupos] = useState(() => {\n    const savedGrupos = localStorage.getItem('grupos');\n    return savedGrupos ? JSON.parse(savedGrupos) : [{\n      id: 1,\n      nome: \"Viagem Família\",\n      meta: 5000,\n      saldoAtual: 2500,\n      membros: [{\n        id: 1,\n        nome: \"Você\",\n        contribuicao: 1000\n      }, {\n        id: 2,\n        nome: \"João\",\n        contribuicao: 1000\n      }, {\n        id: 3,\n        nome: \"Maria\",\n        contribuicao: 1500\n      }],\n      admin: true,\n      saquesPendentes: []\n    }];\n  });\n  const updateGroupBalance = async (groupName, amount, userName) => {\n    try {\n      const valorNumerico = Number(amount);\n      const gruposAtualizados = grupos.map(grupo => {\n        if (grupo.nome === groupName) {\n          const novoSaldo = Number(grupo.saldoAtual) + valorNumerico;\n          return {\n            ...grupo,\n            saldoAtual: novoSaldo,\n            membros: grupo.membros.map(membro => membro.nome === \"Você\" ? {\n              ...membro,\n              contribuicao: Number(membro.contribuicao) + valorNumerico\n            } : membro)\n          };\n        }\n        return grupo;\n      });\n      localStorage.setItem('grupos', JSON.stringify(gruposAtualizados));\n      setGrupos(gruposAtualizados);\n      return true;\n    } catch (error) {\n      console.error('Erro na atualização:', error);\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GroupContext.Provider, {\n    value: {\n      grupos,\n      setGrupos,\n      updateGroupBalance\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(GroupProvider, \"mQdWVMk2cW23P4I4OaevfkHtnOw=\");\n_c = GroupProvider;\nexport function useGroups() {\n  _s2();\n  const context = useContext(GroupContext);\n  if (!context) {\n    throw new Error('useGroups must be used within a GroupProvider');\n  }\n  return context;\n}\n_s2(useGroups, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"GroupProvider\");","map":{"version":3,"names":["createContext","useState","useContext","jsxDEV","_jsxDEV","GroupContext","GroupProvider","children","_s","grupos","setGrupos","savedGrupos","localStorage","getItem","JSON","parse","id","nome","meta","saldoAtual","membros","contribuicao","admin","saquesPendentes","updateGroupBalance","groupName","amount","userName","valorNumerico","Number","gruposAtualizados","map","grupo","novoSaldo","membro","setItem","stringify","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGroups","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/gaabi/OneDrive/Área de Trabalho/Juntaaibank/src/contexts/GroupContext.jsx"],"sourcesContent":["import { createContext, useState, useContext } from 'react';\r\n\r\nconst GroupContext = createContext();\r\n\r\nexport function GroupProvider({ children }) {\r\n  const [grupos, setGrupos] = useState(() => {\r\n    const savedGrupos = localStorage.getItem('grupos');\r\n    return savedGrupos ? JSON.parse(savedGrupos) : [{\r\n      id: 1,\r\n      nome: \"Viagem Família\",\r\n      meta: 5000,\r\n      saldoAtual: 2500,\r\n      membros: [\r\n        { id: 1, nome: \"Você\", contribuicao: 1000 },\r\n        { id: 2, nome: \"João\", contribuicao: 1000 },\r\n        { id: 3, nome: \"Maria\", contribuicao: 1500 }\r\n      ],\r\n      admin: true,\r\n      saquesPendentes: []\r\n    }];\r\n  });\r\n\r\n  const updateGroupBalance = async (groupName, amount, userName) => {\r\n    try {\r\n      const valorNumerico = Number(amount);\r\n      \r\n      const gruposAtualizados = grupos.map(grupo => {\r\n        if (grupo.nome === groupName) {\r\n          const novoSaldo = Number(grupo.saldoAtual) + valorNumerico;\r\n          \r\n          return {\r\n            ...grupo,\r\n            saldoAtual: novoSaldo,\r\n            membros: grupo.membros.map(membro => \r\n              membro.nome === \"Você\" \r\n                ? { ...membro, contribuicao: Number(membro.contribuicao) + valorNumerico }\r\n                : membro\r\n            )\r\n          };\r\n        }\r\n        return grupo;\r\n      });\r\n\r\n      localStorage.setItem('grupos', JSON.stringify(gruposAtualizados));\r\n      setGrupos(gruposAtualizados);\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erro na atualização:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GroupContext.Provider value={{ grupos, setGrupos, updateGroupBalance }}>\r\n      {children}\r\n    </GroupContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useGroups() {\r\n  const context = useContext(GroupContext);\r\n  if (!context) {\r\n    throw new Error('useGroups must be used within a GroupProvider');\r\n  }\r\n  return context;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}